<?xml version="1.0" encoding="UTF-8"?>
<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="com.sist.haebollangce.common.mapper.InterMypageMapper">

	<!-- 결제한 후 예치금 충전 내역을 예치금 테이블에 넣기 -->
	<insert id="go_purchase" parameterType="HashMap">
		insert into tbl_deposit(purchase_code, fk_userid, purchase_date, purchase_price, purchase_status) 
		values(seq_tbl_deposit_purchase_code.nextval, #{userid}, default, #{deposit}, 0)
	</insert>
	
	<!-- 상금 전환 테이블에 해당 내역 넣어주기 -->
	<insert id="reward_convert" parameterType="HashMap">
		insert into tbl_convert_reward(convert_code, fk_userid, convert_date, convert_reward) 
		values(seq_tbl_convert_reward_convert_code.nextval, #{userid}, default, #{reward})
	</insert>
	
	<!-- 유저가 챌린지에 사용한 모든 예치금 -->
	<select id="user_challenge_deposit" parameterType="String" resultType="int">
		select sum(nvl(entry_fee, 0)) as entry_fee
		from tbl_challenge_info right outer join dual
		on fk_userid = #{userid}
		group by fk_userid
	</select>
	
	<!-- 사용자가 보유한 상금 가지고 오기 -->
	<select id="user_reward" parameterType="String" resultType="int">
		select sum(nvl(reward, 0)) as reward
		from tbl_reward right outer join dual
		on fk_userid = #{userid} and <![CDATA[reward > 0]]> 
		group by fk_userid
	</select>

	<!-- 사용자가 환전한 상금 가지고 오기 -->
	<select id="user_convert" parameterType="String" resultType="int">
		select sum(nvl(convert_reward, 0)) as convert_reward
		from tbl_convert_reward right outer join dual
		on fk_userid = #{userid}
		group by fk_userid
	</select> 
	
	<!-- 결제 취소하기 -->
	<update id="purchase_cancel" parameterType="HashMap">
		update tbl_deposit set purchase_status = 1, purchase_date = sysdate
		where fk_userid = #{userid} and purchase_code = #{purchase_code}
	</update>
	
	<!-- 예치금 충전 테이블에서 기록 가지고 오기 -->
	<resultMap type="HashMap" id="mypage_deposit_data_map">
		<result property="purchase_code"   column="purchase_code"   javaType="int" />
		<result property="purchase_date"   column="purchase_date"   javaType="String" />
		<result property="purchase_price"  column="purchase_price"  javaType="int" />
		<result property="purchase_status" column="purchase_status" javaType="int" />
	</resultMap>
	<select id="deposit_data" parameterType="HashMap" resultMap="mypage_deposit_data_map">
		select purchase_code, purchase_date, purchase_price, purchase_status
		from tbl_deposit
		where fk_userid=#{userid}
			and to_char(purchase_date, 'yyyy-mm-dd') between #{start} and #{end}
		order by purchase_date desc
	</select>
	
	<!-- 사용자가 챌린지 참여에 쓴 예치금 내역 알아오기 -->
	<resultMap type="HashMap" id="mypage_during_deposit_map">
		<result property="entry_fee"   	  column="entry_fee"   	  javaType="int" />
		<result property="challenge_name" column="challenge_name" javaType="String" />
		<result property="startdate"  	  column="startdate"  	  javaType="String" />
		<result property="fk_category_code"  	  column="fk_category_code"  	  javaType="String" />
		<result property="category_name"  	  column="category_name"  	  javaType="String" />
	</resultMap>
	<select id="challenge_during_deposit" parameterType="HashMap" resultMap="mypage_during_deposit_map">
		select entry_fee, challenge_name, startdate, fk_category_code, category_name
		from tbl_challenge_info I join tbl_challenge C
									on I.fk_challenge_code = C.challenge_code
								  join tbl_category T
								  	on C.fk_category_code = T.category_code
		where I.fk_userid=#{userid}
		<if test="start != '' and end != ''">
			and to_char(startdate, 'yyyy-mm-dd') between #{start} and #{end}
		</if>
		order by startdate desc
	</select>
	
	<!-- 상금 충전 테이블 정보 찾아오기 -->
	<resultMap type="HashMap" id="mypage_reward_data_map">
		<result property="reward_date" 	  column="reward_date" 	  javaType="String" />
		<result property="reward" 		  column="reward" 		  javaType="int" />
		<result property="challenge_name" column="challenge_name" javaType="String" />
	</resultMap>
	<select id="reward_data" parameterType="HashMap" resultMap="mypage_reward_data_map">
		select R.reward_date, R.reward, C.challenge_name
		from tbl_reward R JOIN tbl_challenge C
			ON R.fk_challenge_code = C.challenge_code
		where R.fk_userid = #{userid} and <![CDATA[R.reward > 0]]> 
		order by R.reward_date desc
	</select>
	
	<!-- 상금 환전 테이블에서 정보 찾아오기 -->
	<resultMap type="HashMap" id="mypage_convert_reward_data_map">
		<result property="convert_date"		column="convert_date"	javaType="String" />
		<result property="convert_reward"	column="convert_reward" javaType="int" />
	</resultMap>
	<select id="convert_reward_data" parameterType="HashMap" resultMap="mypage_convert_reward_data_map">
		select convert_date, convert_reward
		from tbl_convert_reward
		where fk_userid = #{userid}
		order by convert_date desc
	</select>
	
	<!-- 예치금 충전 테이블에서 기록 가지고 오기 - 페이징처리 -->
	<resultMap type="HashMap" id="deposit_paging_data_map">
		<result property="purchase_code"   column="purchase_code"   javaType="int" />
		<result property="purchase_date"   column="purchase_date"   javaType="String" />
		<result property="purchase_price"  column="purchase_price"  javaType="int" />
		<result property="purchase_status" column="purchase_status" javaType="int" />
	</resultMap>
	<select id="deposit_paging_data" parameterType="HashMap" resultMap="deposit_paging_data_map">
		select purchase_code, purchase_date, purchase_price, purchase_status
		from(
    		select row_number() over(order by purchase_date desc) as rno,
            	   purchase_code, purchase_date, purchase_price, purchase_status
    		from tbl_deposit
    		where fk_userid=#{userid}
	    		<if test="start == '' and end == '' ">
	    			and to_char(purchase_date, 'yyyy-mm-dd') between to_char(sysdate-365, 'yyyy-mm-dd') and sysdate
	    		</if>
	    		<if test="start != '' and end != ''">
	        		and to_char(purchase_date, 'yyyy-mm-dd') between #{start} and #{end}
	        	</if>
		)
		where rno between #{start_rno} and #{end_rno}
		order by purchase_date desc
	</select>
	<!-- 예치금 충전 테이블에서 기록 가지고 오기 - 페이지바 -->
	<select id="get_pagebar_purcahse" parameterType="HashMap" resultType="int">
		select ceil( count(*)/#{page_size} )
		from tbl_deposit
		where fk_userid = #{userid}
			<if test="start == '' and end == '' ">
    			and to_char(purchase_date, 'yyyy-mm-dd') between to_char(sysdate-365, 'yyyy-mm-dd') and sysdate
    		</if>
    		<if test="start != '' and end != ''">
        		and to_char(purchase_date, 'yyyy-mm-dd') between #{start} and #{end}
        	</if>
	</select>
	
	
	<!-- 사용자가 챌린지 참여에 쓴 예치금 내역 알아오기 - 페이징처리 -->
	<resultMap type="HashMap" id="challenge_paging_data_map">
		<result property="entry_fee"   	  column="entry_fee"      javaType="int" />
		<result property="challenge_name" column="challenge_name" javaType="String" />
		<result property="startdate"  	  column="startdate"  	  javaType="String" />
		<result property="category_name"  column="category_name"  javaType="String" />
	</resultMap>
	<select id="challenge_paging_data" parameterType="HashMap" resultMap="challenge_paging_data_map">
		select entry_fee, challenge_name, startdate, category_name
		from(
    		select row_number() over(order by C.challenge_code desc) as rno,
           		   entry_fee, challenge_name, startdate, category_name
    		from tbl_challenge_info I join tbl_challenge C
                            			on I.fk_challenge_code = C.challenge_code
                          			  join tbl_category T
                            			on C.fk_category_code = T.category_code
    		where I.fk_userid=#{userid}
    			<if test="start == '' and end == '' ">
	    			and to_char(startdate, 'yyyy-mm-dd') between to_char(sysdate-365, 'yyyy-mm-dd') and sysdate
	    		</if>
	    		<if test="start != '' and end != ''">
	        		and to_char(startdate, 'yyyy-mm-dd') between #{start} and #{end}
	        	</if>
		)
		where rno between #{start_rno} and #{end_rno}
		order by startdate desc
	</select>
	<!-- 사용자가 챌린지 참여에 쓴 예치금 내역 알아오기 - 페이지바 -->
	<select id="get_pagebar_challenging" parameterType="HashMap" resultType="int">
		select ceil( count(*)/#{page_size} )
		from tbl_challenge_info I join tbl_challenge C
                        			on I.fk_challenge_code = C.challenge_code
		where I.fk_userid = #{userid}
			<if test="start == '' and end == '' ">
    			and to_char(C.startdate, 'yyyy-mm-dd') between to_char(sysdate-365, 'yyyy-mm-dd') and sysdate
    		</if>
    		<if test="start != '' and end != ''">
        		and to_char(C.startdate, 'yyyy-mm-dd') between #{start} and #{end}
        	</if>
	</select>
	

	<!-- 결제 현황페이지에서 얻은 상금 알아오기 - 페이징처리 -->
	<resultMap type="HashMap" id="reward_paging_data_map">
		<result property="reward_date" 	  column="reward_date" 	  javaType="String" />
		<result property="reward" 		  column="reward" 		  javaType="int" />
		<result property="challenge_name" column="challenge_name" javaType="String" />
	</resultMap>
	<select id="reward_paging_data" parameterType="HashMap" resultMap="reward_paging_data_map">
		select reward_date, reward, challenge_name
		from(
    		select row_number() over(order by R.fk_challenge_code desc) as rno,
           		   R.reward_date, R.reward, C.challenge_name
    		from tbl_reward R JOIN tbl_challenge C
                        	    ON R.fk_challenge_code = C.challenge_code
    		where R.fk_userid=#{userid} and <![CDATA[R.reward > 0]]> 
    			<if test="start == '' and end == '' ">
	    			and to_char(reward_date, 'yyyy-mm-dd') between to_char(sysdate-365, 'yyyy-mm-dd') and sysdate
	    		</if>
	    		<if test="start != '' and end != ''">
	        		and to_char(reward_date, 'yyyy-mm-dd') between #{start} and #{end}
	        	</if>
		)
		where rno between #{start_rno} and #{end_rno}
		order by reward_date desc
	</select>
	<!-- 결제 현황페이지에서 얻은 상금 알아오기 - 페이징바 -->
	<select id="get_pagebar_reward" parameterType="HashMap" resultType="int">
		select ceil( count(*)/#{page_size} )
		from tbl_reward
		where fk_userid = #{userid} and <![CDATA[reward > 0]]> 
			<if test="start == '' and end == '' ">
    			and to_char(reward_date, 'yyyy-mm-dd') between to_char(sysdate-365, 'yyyy-mm-dd') and sysdate
    		</if>
    		<if test="start != '' and end != ''">
        		and to_char(reward_date, 'yyyy-mm-dd') between #{start} and #{end}
        	</if>
	</select>
	
	<!-- 결제 현황페이지에서 환전한 상금  알아오기 - 페이징처리 -->
	<resultMap type="HashMap" id="convert_paging_data_map">
		<result property="convert_date"		column="convert_date"	javaType="String" />
		<result property="convert_reward"	column="convert_reward" javaType="int" />
	</resultMap>
	<select id="convert_paging_data" parameterType="HashMap" resultMap="convert_paging_data_map">
		select convert_date, convert_reward
		from(
    		select row_number() over(order by convert_code desc) as rno,
           		   convert_date, convert_reward
    		from tbl_convert_reward R 
    		where fk_userid=#{userid}
    			<if test="start == '' and end == '' ">
	    			and to_char(convert_date, 'yyyy-mm-dd') between to_char(sysdate-365, 'yyyy-mm-dd') and sysdate
	    		</if>
	    		<if test="start != '' and end != ''">
	        		and to_char(convert_date, 'yyyy-mm-dd') between #{start} and #{end}
	        	</if>
		)
		where rno between #{start_rno} and #{end_rno}
		order by convert_date desc
	</select>
	<!-- 결제 현황페이지에서 환전한 상금  알아오기 - 페이징바 -->
	<select id="get_pagebar_convert" parameterType="HashMap" resultType="int">
		select ceil( count(*)/#{page_size} )
		from tbl_convert_reward
		where fk_userid = #{userid}
			<if test="start == '' and end == '' ">
    			and to_char(convert_date, 'yyyy-mm-dd') between to_char(sysdate-365, 'yyyy-mm-dd') and sysdate
    		</if>
    		<if test="start != '' and end != ''">
        		and to_char(convert_date, 'yyyy-mm-dd') between #{start} and #{end}
        	</if>
	</select>
	
	
	<!-- 예치금 그래프 그리기 -->
	<resultMap type="HashMap" id="deposit_chart_map">
		<result property="month" 		  column="month" 		  javaType="String" />
		<result property="purchase_price" column="purchase_price" javaType="String" />
		<result property="entry_fee" 	  column="entry_fee"      javaType="String" />
		<result property="purchase_price" column="purchase_price" javaType="String" />
	</resultMap>
	<select id="deposit_chart" parameterType="HashMap" resultMap="deposit_chart_map">
		select D.month as month,
			   NVL(P.purchase_price, 0) as purchase_price,
		       NVL(C.entry_fee, 0) as entry_fee,
		       NVL(P.purchase_price, 0) - NVL(C.entry_fee, 0) as price
		from 
		(
		    select level as month
		    from dual
		    connect by <![CDATA[level <= 12]]> 
		) D left join
		(
		     select extract(month from startdate) as month, sum(entry_fee) as entry_fee
					from tbl_challenge_info I join tbl_challenge C
												on I.fk_challenge_code = C.challenge_code
											  join tbl_category T
												on C.fk_category_code = T.category_code
				    where I.fk_userid=#{userid}
				    		and to_char(startdate, 'yyyy-mm-dd') between to_char(sysdate-365, 'yyyy-mm-dd') and sysdate
				    group by extract(month from startdate)
		) C 
		on D.month = C.month
		left join
		(
		    select extract(month from purchase_date) as month, sum(purchase_price) as purchase_price
		    from tbl_deposit
			where fk_userid=#{userid}
				and purchase_status = 0
		            and to_char(purchase_date, 'yyyy-mm-dd') between to_char(sysdate-365, 'yyyy-mm-dd') and sysdate
		    group by extract(month from purchase_date)
		) P
		on D.month = P.month
		order by D.month
	</select>
	
	
	<!-- 상금 그래프 그리기 -->
	<resultMap type="HashMap" id="reward_chart_map">
		<result property="month" 		  column="month" 		  javaType="String" />
		<result property="reward"		  column="reward"		  javaType="String" />
		<result property="convert_reward" column="convert_reward" javaType="String" />
		<result property="user_reward"	  column="user_reward"	  javaType="String" />
	</resultMap>
	<select id="reward_chart" parameterType="HashMap" resultMap="reward_chart_map">
		select D.month as month,
			   NVL(R.reward, 0) as reward,
		       NVL(C.convert_reward, 0) as convert_reward,
		       NVL(R.reward, 0) - NVL(C.convert_reward, 0) as user_reward
		from 
		(
		    select level as month
		    from dual
		    connect by <![CDATA[level <= 12]]> 
		) D left join
		(
		    select extract(month from reward_Date) as month, sum(reward) as reward
			from tbl_reward
			where fk_userid = #{userid} and <![CDATA[reward > 0]]> 
		        and to_char(reward_Date, 'yyyy-mm-dd') between to_char(sysdate-365, 'yyyy-mm-dd') and sysdate
			group by extract(month from reward_Date)
		) R
		on D.month = R.month
		left join
		(
		    select extract(month from convert_date) as month, sum(convert_reward) as convert_reward
			from tbl_convert_reward
			where fk_userid = #{userid}
		        and to_char(convert_date, 'yyyy-mm-dd') between to_char(sysdate-365, 'yyyy-mm-dd') and sysdate
			group by extract(month from convert_date)
		) C
		on D.month = C.month
		order by D.month
	</select>
	

	<!-- 정보수정하기 페이지에서 수정할 정보들 가지고 오기 -->
	<select id="select_info" parameterType="HashMap" resultType="com.sist.haebollangce.user.dto.UserDTO">
		select userid, email, pw, acct, mobile, profile_pic, name, exp
		from tbl_user
		where userid = #{userid}
	</select>
	
	<!-- 관심태그 모두 가져오기 -->
	<resultMap type="HashMap" id="mypage_all_interest_map">
		<result property="category_code" 	  column="category_code" 	  javaType="String" />
		<result property="category_name" 	  column="category_name" 	  javaType="String" />
	</resultMap>
	<select id="all_interest" resultMap="mypage_all_interest_map">
		select category_code, category_name
		from tbl_category 
	</select>
	<resultMap type="HashMap" id="user_interest_map">
		<result property="interest_code" 	  column="interest_code" 	  javaType="String" />
		<result property="fk_category_code" 	  column="fk_category_code" 	  javaType="String" />
		<result property="category_name" 	  column="category_name" 	  javaType="String" />
	</resultMap>
	<select id="user_interest" resultMap="user_interest_map">
		select interest_code, fk_category_code, category_name
		from tbl_interest I join tbl_category C
							on I.fk_category_code = C.category_code
		where fk_userid = #{userid}
	</select>
	
	
	<!-- 관심태그 알아오기 -->
	<resultMap type="HashMap" id="mypage_recommend_map">
		<result property="thumbnail" 	  column="thumbnail" 	  javaType="String" />
		<result property="challenge_name" column="challenge_name" javaType="String" />
		<result property="regDate" 	  	  column="regDate" 	      javaType="String" />
		<result property="startdate" 	  column="startdate" 	  javaType="String" />
		<result property="member_count"   column="member_count"   javaType="String" />
		<result property="fk_userid" 	  column="fk_userid" 	  javaType="String" />
	</resultMap>
	<select id="recommend" parameterType="HashMap" resultMap="mypage_recommend_map">
		select C.challenge_name, thumbnail, C.member_count, C.fk_userid,
			   to_char(C.regDate, 'yyyy-mm-dd') AS regDate, 
			   to_char(C.startdate, 'yyyy-mm-dd') AS startdate
		from tbl_interest I join tbl_category T
							  on I.fk_category_code = T.category_code
                            join tbl_challenge C
                                on I.fk_category_code = C.fk_category_code 
		where I.fk_userid = #{userid}
		order by regDate desc
	</select>
	
	<!-- 관심태그 추가하기 -->
	<insert id="plus_interest" parameterType="HashMap">
		insert into tbl_interest(interest_code, fk_userid, fk_category_code) 
		values(seq_tbl_interest_interest_code.nextval, #{userid}, #{category_code})
	</insert>
	
	<!-- 관심태그 삭제하기 -->
	<delete id="del_interest" parameterType="HashMap">
		delete from tbl_interest
		where fk_userid = #{userid} and fk_category_code = #{category_code}
	</delete>
	
	<!-- 이메일 중복확인하기 -->
	<select id="select_change_email" parameterType="String" resultType="int">
		select count(*) 
		from tbl_user
		where email=#{change_email}
	</select>
	
	<!-- 회원정보 수정하기 -->
	<update id="mypage_info_edit" parameterType="HashMap">
		update tbl_user set profile_pic=#{profilePic},
							mobile=#{mobile}
							<if test="acct != null">
								,acct=#{acct}
							</if>
							<if test="email != null">
								,email=#{email}
							</if>
		where userid=#{userid}
	</update>
	
	<!-- 회원정보 수정하기  -->
	<update id="modifyPw" parameterType="com.sist.haebollangce.user.dto.UserDTO">
		update tbl_user set pw = #{pw}
		where userid=#{userid}
	</update>
	
	<!-- 회원 탈퇴하기 -->
	<update id="delete_user" parameterType="HashMap">
		update tbl_user set status=1
		where userid=#{userid}
	</update>
	
	<!-- 찜한 챌린지 불러오기 -->
	<resultMap type="HashMap" id="mypage_select_like_challenge_map">
		<result property="thumbnail" 	  column="thumbnail" 	  javaType="String" />
		<result property="challenge_code" column="challenge_code" javaType="int" />
		<result property="challenge_name" column="challenge_name" javaType="String" />
		<result property="startdate" 	  column="startdate" 	  javaType="String" />
		<result property="enddate"   	  column="enddate"   	  javaType="String" />
	</resultMap>
	<select id="select_like_challenge" parameterType="String" resultMap="mypage_select_like_challenge_map">
		select C.thumbnail, C.challenge_code, C.challenge_name, 
       		   to_char(C.startdate, 'yyyy-mm-dd') AS startdate, 
       		   to_char(C.startdate+func_challeng_during(C.fk_during_type), 'yyyy-mm-dd') AS enddate
		from tbl_challenge C join tbl_challenge_during D
    					     on C.fk_during_type = D.during_type
    						 join tbl_like L
    						 on C.challenge_code = L.fk_challenge_code
		where L.fk_userid = #{userid}
		order by C.startdate asc
	</select>
	
	
	<!-- 찜한 라운지 불러오기 
	<resultMap type="HashMap" id="mypage_select_like_lounge_map">
		<result property="fk_seq" 	 	    column="fk_seq" 		  javaType="String" />
	</resultMap>
	<select id="select_like_lounge" parameterType="String" resultMap="mypage_select_like_lounge_map">
		select fk_seq
    	from tbl_lounge_like
    	where fk_userid = #{userid}
	</select>
	
	<resultMap type="HashMap" id="selectList_map">
		<result property="seq" 	 	    column="seq" 		  javaType="String" />
		<result property="name" 	 	    column="name" 		  javaType="String" />
		<result property="subject" 	 	    column="subject" 		  javaType="String" />
		<result property="content" 	 	    column="content" 		  javaType="String" />
		<result property="likeCount" 	 	    column="likeCount" 		  javaType="String" />
		<result property="commentCount" 	 	    column="commentCount" 		  javaType="String" />
		<result property="readCount" 	 	    column="readCount" 		  javaType="String" />
		<result property="filename" 	 	    column="filename" 		  javaType="String" />
		<result property="thumbnail" 	 	    column="thumbnail" 		  javaType="String" />
	</resultMap>
	<select id="selectList" parameterType="String" resultMap="selectList_map">
		select seq, name, subject, content, likeCount, 
			   commentCount, readCount, filename, thumbnail
		from tbl_lounge_board B 
		<foreach collection="like_lounge_list" item="item" open="(" separator="," close=")">
        	seq = #{item.fk_seq}
   		</foreach>
	</select>
	-->
	
	<!-- 찜한 라운지 불러오기 -->
	<resultMap type="HashMap" id="mypage_select_like_lounge_map">
		<result property="seq" 	 	    column="seq" 		  javaType="String" />
		<result property="name" 	    column="name" 	 	  javaType="String" />
		<result property="subject" 	    column="subject" 	  javaType="String" />
		<result property="content" 	    column="content" 	  javaType="String" />
		<result property="likeCount" 	column="likeCount" 	  javaType="String" />
		<result property="commentCount" column="commentCount" javaType="String" />
		<result property="readCount" 	column="readCount" 	  javaType="String" />
		<result property="profile_pic" 	column="profile_pic"  javaType="String" />
		<result property="thumbnail" 	column="thumbnail"     javaType="String" />
	</resultMap>
	<select id="select_like_lounge" parameterType="String" resultMap="mypage_select_like_lounge_map">
		select seq, B.name, subject, content, likeCount, 
			   commentCount, readCount, profile_pic, thumbnail
		from tbl_lounge_like L join tbl_lounge_board B
									on L.fk_seq = B.seq
							   join tbl_user U
									on B.fk_userid = U.userid
		where L.fk_userid = #{userid}
	</select>
	
	
	<!-- 진행중인 챌린지 페이지 정보 가지고오기 -->
	<resultMap type="HashMap" id="mypage_challenging_map">
		<result property="fk_challenge_code" column="fk_challenge_code" javaType="String" />
		<result property="thumbnail" 	     column="thumbnail" 	    javaType="String" />
		<result property="challenge_name"    column="challenge_name"    javaType="String" />
		<result property="set_date" 	     column="set_date" 	        javaType="String" />
		<result property="fk_userid" 	     column="fk_userid" 	    javaType="String" />
		<result property="freq_type" 	     column="freq_type" 	    javaType="String" />
		<result property="frequency" 	     column="frequency" 	    javaType="String" />
		<result property="achievement_pct" 	 column="achievement_pct" 	javaType="String" />
		<result property="startdate" 	     column="startdate" 	    javaType="String" />
		<result property="hour_start" 	     column="hour_start"        javaType="String" />
		<result property="hour_end" 	     column="hour_end" 	        javaType="String" />
		<result property="finish_day" 	     column="finish_day"        javaType="String" />
	</resultMap>
	<select id="mypage_challenging" parameterType="HashMap" resultMap="mypage_challenging_map">
		select I.fk_challenge_code, C.thumbnail, C.challenge_name, D.set_date, 
			   C.fk_userid, F.freq_type ,F.frequency, achievement_pct,
			   to_char(C.startdate, 'yyyy-mm-dd') AS startdate,
			   to_char(H.hour_start, 'hh24:mi:ss') AS hour_start, 
			   to_char(H.hour_end, 'hh24:mi:ss') AS hour_end,
			   to_char(C.startdate + func_challeng_during(D.during_type), 'yyyy-mm-dd') AS finish_day
		from tbl_challenge C join tbl_challenge_info I
                       		 	on I.fk_challenge_code = C.challenge_code
                    		 join tbl_challenge_during D
                        		on C.fk_during_type = D.during_type
                        	join tbl_certify_hour H
                        		on C.challenge_code = H.challenge_code
                        	join tbl_certify_freq F
                       		     on F.freq_type = C.fk_freq_type
		where I.fk_userid = #{userid}
		<if test="fk_category_code != 0">
			and C.fk_category_code = #{fk_category_code}
		</if>
		order by I.fk_challenge_code desc
	</select>

	
	<!-- 사용자 정보 가지고 오기 -->
	<select id="user_exp" parameterType="String" resultType="int">
		select nvl(exp, 0)
		from tbl_user
		where userid = #{userid} 
	</select>
	
		<select id="image" parameterType="String" resultType="String">
		select profile_pic
		from tbl_user
		where userid = #{userid} 
	</select>
	
	<!-- 진행중인 챌린지 중 오늘 하루 인증했는지 여부 -->
	<resultMap type="HashMap" id="mypage_certify_challenge_map">
		<result property="fk_challenge_code" column="fk_challenge_code" javaType="String" />
	</resultMap>
	<select id="mypage_certify_challenge" parameterType="HashMap" resultMap="mypage_certify_challenge_map">
		select fk_challenge_code
		from tbl_certify_history 
		where trunc(certify_time) = trunc(sysdate) and fk_userid = #{userid}
	</select>
	
	
	<!-- 완료된 챌린지 갯수 불러오기 -->
	<select id="finish_count" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_challenge C join tbl_challenge_during D
                        		on C.fk_during_type = D.during_type
                     		 join tbl_challenge_info I
                         		on I.fk_challenge_code = C.challenge_code
		where I.fk_userid = #{userid} and <![CDATA[trunc(C.startdate + func_challeng_during(D.during_type)) < trunc(sysdate)]]>
		<!-- 여기에서 < 는 태그로 인식하기 때문에 <![CDATA[조건문]]> 으로 작성해주어야한다. -->
	</select>
	
	
	<!-- 마이페이지 100% 인증한 챌린지 갯수 불러오기 -->
	<select id="finish_100_count" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_challenge_info
		where fk_userid = #{userid} and achievement_pct = 100
	</select>
	
	<!-- 마이페이지 홈 챌린지 그래프-챌린지 참여 횟수 -->
	<resultMap type="HashMap" id="chart_challenging_map">
		<result property="month" 	   column="month" 		javaType="String" />
		<result property="count" 	   column="count" 		javaType="String" />
	</resultMap>
	<select id="chart_challenging" parameterType="HashMap" resultMap="chart_challenging_map">
		select V.month as month, NVL(T.count, 0) as count
		from 
			(
				select level as month
				from dual
				<![CDATA[connect by level <= 12]]>
			) V left join
			(
				select extract(month from C.startdate) as month, count(*) as count
				from tbl_challenge C join tbl_challenge_info I
                        			on C.challenge_code = I.fk_challenge_code
				where I.fk_userid = #{userid} and to_char(C.startdate, 'yyyy') = to_char(sysdate, 'yyyy')
				group by extract(month from C.startdate)
			) T 
			on V.month = T.month
			order by V.month
	</select>
	<resultMap type="HashMap" id="chart_category_map">
		<result property="category_name" column="category_name" javaType="String" />
		<result property="percentage" 	 column="percentage" 	javaType="String" />
	</resultMap>
	<select id="chart_category" parameterType="HashMap" resultMap="chart_category_map">
		select G.category_name as category_name,
        		round(count(*)/(select count(*) from tbl_challenge_info where fk_userid=#{userid})*100, 2) as percentage
		from tbl_challenge C join tbl_challenge_info I
                        		on C.challenge_code = I.fk_challenge_code
                    		 join tbl_category G
                       			 on C.fk_category_code = G.category_code
		where I.fk_userid = #{userid} and to_char(C.startdate, 'mm') = ${month} and to_char(C.startdate, 'yyyy') = to_char(sysdate, 'yyyy')
		group by G.category_name
		order by percentage desc
	</select>
	
	


	<select id="user_deposit" parameterType="HashMap" resultType="int">
		select sum(nvl(purchase_price, 0)) - sum(nvl(entry_fee, 0)) AS user_deposit
		from
		(
    		select nvl(fk_userid, #{userid}) as fk_userid,
    			   sum(nvl(purchase_price, 0)) as purchase_price
    		from tbl_deposit
    		where purchase_status = '0'
    		group by fk_userid
		) D left join
		(
    		select nvl(fk_userid, #{userid}) as fk_userid, 
    			   sum(nvl(entry_fee, 0)) as entry_fee
    		from tbl_challenge_info right outer join dual
		    on fk_userid = #{userid}
		    group by fk_userid
		) C
		on D.fk_userid = C.fk_userid
		where D.fk_userid = #{userid}
	</select>
	
	
	<select id="all_reward" parameterType="HashMap" resultType="com.sist.haebollangce.user.dto.RewardDTO">
		select reward, convert_reward,
		       nvl(reward - convert_reward, 0) as allreward
		from
		    (
		        select nvl(fk_userid, #{userid}) as fk_userid,
		               sum(nvl(reward, 0)) as reward
		        from tbl_reward
		        right outer join dual on fk_userid = #{userid} and reward > 0
		        group by fk_userid
		    ) R join
		    (
		        select nvl(fk_userid, #{userid}) as fk_userid,
		               sum(nvl(convert_reward, 0)) as convert_reward
		        from tbl_convert_reward
		        right outer join dual on fk_userid = #{userid}
		        group by fk_userid
		    ) C
			on R.fk_userid = C.fk_userid
			where R.fk_userid = #{userid}
	</select>
	
	
	<select id="depo_dto" parameterType="HashMap" resultType="com.sist.haebollangce.user.dto.DepositDTO">
		select purchase_price, entry_fee, 
			   nvl(purchase_price - entry_fee, 0) AS allDeposit
		from
		(
    		select nvl(fk_userid, #{userid}) as fk_userid,
    			   sum(nvl(purchase_price, 0)) as purchase_price
    		from tbl_deposit right outer join dual
		    on fk_userid = #{userid} and purchase_status = '0'
    		group by fk_userid
		) D join
		(
    		select nvl(fk_userid, #{userid}) as fk_userid,
    		       sum(nvl(entry_fee, 0)) as entry_fee
    		from tbl_challenge_info right outer join dual
		    on fk_userid = #{userid}
		    group by fk_userid
		) C
		on D.fk_userid = C.fk_userid
	</select>

</mapper>